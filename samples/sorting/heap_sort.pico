fn heap_sort(arr) {
    heap_cl = fn(arr, len, idx) {
        max = idx;
        right_idx = 2 * idx + 2;
        left_idx = 2 * idx + 1;
        
        if left_idx < len && arr[left_idx] > arr[max] {
            max = left_idx;
        }

        if right_idx < len && arr[right_idx] > arr[max] {
            max = right_idx;
        }

        if max != idx {
            tmp = arr[idx];
            arr[idx] = arr[max];
            arr[max] = tmp;
            @heap_cl(arr, len, max);
        }
    };

    for i = arr.len() / 2 - 1; i >= 0; i -= 1 {
        @heap_cl(arr, arr.len(), i);
    }

    for i = arr.len() - 1; i > 0; i -= 1 {
        tmp = arr[0];
        arr[0] = arr[i];
        arr[i] = tmp;
        @heap_cl(arr, i, 0);
    }
    return arr;
}

x = [30, 93, 0, 74, 14, 15, 34, 45, 64, 82, 23, 78, 18, 88, 81, 77, 43, 9, 15, 35, 96, 76, 78, 21, 80, 85, 47, 86, 38, 1, 34, 40, 31, 54, 64, 71, 89, 14, 24, 34, 5, 92, 22, 49, 7, 66, 16, 97, 21, 75, 31, 34, 98, 6, 75, 43, 17, 68, 23, 88, 86, 19, 98, 15, 91, 28, 98, 68, 55, 78, 34, 0, 12, 30, 57, 63, 36, 98, 67, 46, 49, 35, 79, 1, 37, 36, 6, 20, 68, 84, 9, 10, 95, 22, 56, 84, 90, 89, 58, 74];
x = heap_sort(x);
assert(x == [0, 0, 1, 1, 5, 6, 6, 7, 9, 9, 10, 12, 14, 14, 15, 15, 15, 16, 17, 18, 19, 20, 21, 21, 22, 22, 23, 23, 24, 28, 30, 30, 31, 31, 34, 34, 34, 34, 34, 35, 35, 36, 36, 37, 38, 40, 43, 43, 45, 46, 47, 49, 49, 54, 55, 56, 57, 58, 63, 64, 64, 66, 67, 68, 68, 68, 71, 74, 74, 75, 75, 76, 77, 78, 78, 78, 79, 80, 81, 82, 84, 84, 85, 86, 86, 88, 88, 89, 89, 90, 91, 92, 93, 95, 96, 97, 98, 98, 98, 98]);